<?php

namespace App;

use App\Scopes\CurrentUserScope;
use Illuminate\Database\Eloquent\Model;

class Transaction extends Model
{
    //



    protected $fillable = [
        'description',
        'amount',
        'planned_on',
        'repeating_id',
        'repeating_interval'
    ];





    public function user() {
        return $this->belongsTo(User::class);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope(new CurrentUserScope());
    }

    /**
     * Scope a query to only include users of a given type.
     *
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param \DateTime $dateFrom
     * @param \DateTime $dateTo
     * @return void
     */
    public function scopeBetween($query, $dateFrom, $dateTo) {

        $query->whereBetween('planned_on', [$dateFrom, $dateTo]);

    }

    /**
     * @param \Illuminate\Database\Eloquent\Builder $query
     */
    public function scopeOrdered($query) {

        $query->orderBy('planned_on', 'ASC');

    }

    /**
     * @param \Illuminate\Database\Eloquent\Builder $query
     *
     */
    public function scopeId($query, $keyId) {

        $query->where('id', '=', $keyId);

    }

    /**
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param $keyId
     */
    public function scopeWithoutKey($query, $keyId) {

        $query->whereKeyNot($keyId);

    }



    /**
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param $repeating_id
     */
    public function scopeRepeating($query, $repeating_id, $planned_on) {

        $query->where('repeating_id', '=', $repeating_id);
        $query->where('planned_on', '>=', $planned_on);


    }


}
